#!/bin/bash

############################################################################################
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Kernel Source:
# git clone <your_repo_link> -b <branch>
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
############################################################################################

##############################################
# Toolchains
# Find more on https://kali.download/nethunter-images/toolchains/
##############################################

# Architecture (arm or arm64)
export ARCH=arm64
export SUBARCH=arm64

### Most arm64 kernels above version 4.x is fine with Clang-10.
### Older kernels (3.x) don't build with clang

# Uncomment this section if your device is older
# Clang paths
#unset CLANG_ROOT
#unset CLANG_PATH
#unset LD_LIBRARY_PATH
#unset CLANG_TRIPLE
#unset CC
#unset CLANG_SRC

### Recommended arm compiler
# GCC 32bit (arm) source
CROSS_COMPILE_ARM32_SRC="https://kali.download/nethunter-images/toolchains/linaro-armhf-4.9.tar.xz"
CROSS_COMPILE_ARM32_TYPE="wget"
# And it's path
CCD32="${TD}/linaro-armhf-4.9"
export CROSS_COMPILE_ARM32=${CCD32}/bin/arm-linux-gnueabihf-

### Recommended arm64 compiler
# GCC 64bit (arm64) source
CROSS_COMPILE_SRC="https://kali.download/nethunter-images/toolchains/linaro-aarch64-5.5.tar.xz"
CROSS_COMPILE_TYPE="wget"
# And it's path
CCD64="${TD}/linaro-aarch64-5.5"
export CROSS_COMPILE=${CCD64}/bin/aarch64-linux-gnu-

### Recommended clang compiler
CLANG_SRC="https://kali.download/nethunter-images/toolchains/google_clang-10.0.4.tar.xz"
CLANG_SRC_TYPE="wget"
# And it's path
export CLANG_ROOT=${TD}/clang-10.0

# Additional compiler arguments
MAKE_ARGS=""

# Speed up the build
CCACHE=true

# Name your kernel
# Kernel local name
export LOCALVERSION=-yesimxev

# Some devices will have mismatch, to ignore errors uncomment the following line
#MAKE_ARGS="CONFIG_NO_ERROR_ON_MISMATCH=y"
